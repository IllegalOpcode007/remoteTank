
motorControl.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007ac  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000026  00800060  000007ac  00000820  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00000846  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a8  00000000  00000000  000008e0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ae9  00000000  00000000  00000988  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000733  00000000  00000000  00001471  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000673  00000000  00000000  00001ba4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e0  00000000  00000000  00002218  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000470  00000000  00000000  000022f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002e9  00000000  00000000  00002768  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00002a51  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ea       	ldi	r30, 0xAC	; 172
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 38       	cpi	r26, 0x86	; 134
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 7f 00 	call	0xfe	; 0xfe <main>
  7a:	0c 94 d4 03 	jmp	0x7a8	; 0x7a8 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <USARTInit>:
	{
		PORTC = clcMsk;
		PORTB = clcMsk;
		PORTD = (clcMsk|rx|tx);
	}
}
  82:	87 e6       	ldi	r24, 0x67	; 103
  84:	89 b9       	out	0x09, r24	; 9
  86:	10 bc       	out	0x20, r1	; 32
  88:	86 e8       	ldi	r24, 0x86	; 134
  8a:	80 bd       	out	0x20, r24	; 32
  8c:	88 e1       	ldi	r24, 0x18	; 24
  8e:	8a b9       	out	0x0a, r24	; 10
  90:	08 95       	ret

00000092 <USARTWriteChar>:
  92:	5d 9b       	sbis	0x0b, 5	; 11
  94:	fe cf       	rjmp	.-4      	; 0x92 <USARTWriteChar>
  96:	8c b9       	out	0x0c, r24	; 12
  98:	08 95       	ret

0000009a <USART_putstring>:
  9a:	cf 93       	push	r28
  9c:	df 93       	push	r29
  9e:	ec 01       	movw	r28, r24
  a0:	88 81       	ld	r24, Y
  a2:	88 23       	and	r24, r24
  a4:	31 f0       	breq	.+12     	; 0xb2 <USART_putstring+0x18>
  a6:	21 96       	adiw	r28, 0x01	; 1
  a8:	0e 94 49 00 	call	0x92	; 0x92 <USARTWriteChar>
  ac:	89 91       	ld	r24, Y+
  ae:	81 11       	cpse	r24, r1
  b0:	fb cf       	rjmp	.-10     	; 0xa8 <USART_putstring+0xe>
  b2:	df 91       	pop	r29
  b4:	cf 91       	pop	r28
  b6:	08 95       	ret

000000b8 <debounce>:
#define btnOne PB0 // may need to change port

#define DEBOUNCE_TIME 1000 // microseconds
uint8_t debounce(void)
{
	if(!(PINB & (1<<btnOne)))
  b8:	b0 99       	sbic	0x16, 0	; 22
  ba:	0a c0       	rjmp	.+20     	; 0xd0 <debounce+0x18>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  bc:	8f e9       	ldi	r24, 0x9F	; 159
  be:	9f e0       	ldi	r25, 0x0F	; 15
  c0:	01 97       	sbiw	r24, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <debounce+0x8>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <debounce+0xe>
  c6:	00 00       	nop
	{
		_delay_us(DEBOUNCE_TIME);
		if(!(PINB & (1<<btnOne))) // button still pressed? 
  c8:	86 b3       	in	r24, 0x16	; 22
  ca:	80 95       	com	r24
  cc:	81 70       	andi	r24, 0x01	; 1
  ce:	08 95       	ret
		{
			return(1);
		}
	}
	return(0);
  d0:	80 e0       	ldi	r24, 0x00	; 0
  d2:	08 95       	ret

000000d4 <setup>:
#include "pushButton.h"

void setup(void)
{
	/* DDRx (Data Direction Register) Configures data direction of port pins */ 
	DDRB |= (1<<DDB3)|(1<<DDB1); // 0b00001000 Make pin 3 of Port B an output pin. Pin 0 and pin 1 kept as inputs for buttons.  
  d4:	87 b3       	in	r24, 0x17	; 23
  d6:	8a 60       	ori	r24, 0x0A	; 10
  d8:	87 bb       	out	0x17, r24	; 23
	DDRC |= (1<<DDC0)|(1<<DDC1); // 0b00000011 Make pin 0 and pin 1 of Port C an output pin
  da:	84 b3       	in	r24, 0x14	; 20
  dc:	83 60       	ori	r24, 0x03	; 3
  de:	84 bb       	out	0x14, r24	; 20
	DDRD |= (1<<DDD1)|(1<<DDD7); // 0b10000011 Make pin 7 (motor), pin 1 (TX) of Port D, pin0 (RX) is an input pin so leave alone
  e0:	81 b3       	in	r24, 0x11	; 17
  e2:	82 68       	ori	r24, 0x82	; 130
  e4:	81 bb       	out	0x11, r24	; 17
    /*Activate Pull-Up Resistors */ 
	PORTD |= (1<<PD0);  // activating the pull-up resistor for the RX pin (need this set for Serial Comm.... otherwise cannot send rx)
  e6:	90 9a       	sbi	0x12, 0	; 18
	PORTB |= (1<<PB0); // activate pull-up resistor for pin 0 and pin 1 for buttons (pin 0 and pin 1 will be high) 
  e8:	c0 9a       	sbi	0x18, 0	; 24
	/* Oscillator Calibration */ 
	OSCCAL |= 0xAA; 
  ea:	81 b7       	in	r24, 0x31	; 49
  ec:	8a 6a       	ori	r24, 0xAA	; 170
  ee:	81 bf       	out	0x31, r24	; 49
  f0:	08 95       	ret

000000f2 <timerInit>:
}

void timerInit()
{
	// set up timer with no prescaling
	TCCR1B |= (1<<CS10); // no prescalar 
  f2:	8e b5       	in	r24, 0x2e	; 46
  f4:	81 60       	ori	r24, 0x01	; 1
  f6:	8e bd       	out	0x2e, r24	; 46
	
	// initialize counter
	TCNT1 = 0; 
  f8:	1d bc       	out	0x2d, r1	; 45
  fa:	1c bc       	out	0x2c, r1	; 44
  fc:	08 95       	ret

000000fe <main>:
}

int main(void)
{
  fe:	cf 93       	push	r28
 100:	df 93       	push	r29
 102:	cd b7       	in	r28, 0x3d	; 61
 104:	de b7       	in	r29, 0x3e	; 62
 106:	e2 97       	sbiw	r28, 0x32	; 50
 108:	0f b6       	in	r0, 0x3f	; 63
 10a:	f8 94       	cli
 10c:	de bf       	out	0x3e, r29	; 62
 10e:	0f be       	out	0x3f, r0	; 63
 110:	cd bf       	out	0x3d, r28	; 61
	USARTInit(BAUD_PRESCALE); 
 112:	67 e6       	ldi	r22, 0x67	; 103
 114:	70 e0       	ldi	r23, 0x00	; 0
 116:	80 e0       	ldi	r24, 0x00	; 0
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 41 00 	call	0x82	; 0x82 <USARTInit>
	char data; //' '; uncomment when using pushbutton 
    setup();
 11e:	0e 94 6a 00 	call	0xd4	; 0xd4 <setup>
	timerInit();
 122:	0e 94 79 00 	call	0xf2	; 0xf2 <timerInit>
	USART_putstring("Hello!\r\n");	
 126:	80 e6       	ldi	r24, 0x60	; 96
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	0e 94 4d 00 	call	0x9a	; 0x9a <USART_putstring>
	/* Button State */
	uint8_t buttonWasPressed = 0;
	uint8_t pressCount; 
	char pressCountChar[50];
	char counterChar[10];
	uint16_t counter = 0; 
 12e:	00 e0       	ldi	r16, 0x00	; 0
 130:	10 e0       	ldi	r17, 0x00	; 0
	char data; //' '; uncomment when using pushbutton 
    setup();
	timerInit();
	USART_putstring("Hello!\r\n");	
	/* Button State */
	uint8_t buttonWasPressed = 0;
 132:	b1 2c       	mov	r11, r1
		{
			TCNT1 = 0; 
			counter++;
			if(counter > 1587){ //1000
				counter = 0; 
				PORTB = (1<<PB0)|(1<<PB1); // need to keep port 0 high since pulled-up for push button
 134:	0f 2e       	mov	r0, r31
 136:	f3 e0       	ldi	r31, 0x03	; 3
 138:	9f 2e       	mov	r9, r31
 13a:	f0 2d       	mov	r31, r0
		if (TCNT1 > 10000)  // 15873
		{
			TCNT1 = 0; 
			counter++;
			if(counter > 1587){ //1000
				counter = 0; 
 13c:	71 2c       	mov	r7, r1
 13e:	81 2c       	mov	r8, r1
					USART_putstring(pressCountChar); 
				}
			}
			else
			{
				buttonWasPressed = 0; 
 140:	a1 2c       	mov	r10, r1
					buttonWasPressed = 1; 
					PORTB = (1<<PB0)|(1<<PB1); // need to keep port 0 high since pulled-up for push button 
					pressCount = eeprom_read_byte((uint8_t*)46); // read from memory
					pressCount++; // increment button count
					eeprom_write_byte((uint8_t*)46, pressCount); // write to memory
					sprintf(pressCountChar, "Button Pressed %d times...\r\n", pressCount);
 142:	0f 2e       	mov	r0, r31
 144:	f9 e6       	ldi	r31, 0x69	; 105
 146:	cf 2e       	mov	r12, r31
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	df 2e       	mov	r13, r31
 14c:	f0 2d       	mov	r31, r0
 14e:	ce 01       	movw	r24, r28
 150:	01 96       	adiw	r24, 0x01	; 1
 152:	7c 01       	movw	r14, r24
		{
			if(debounce())
			{
				if(buttonWasPressed == 0)
				{
					buttonWasPressed = 1; 
 154:	66 24       	eor	r6, r6
 156:	63 94       	inc	r6
	keyControl.brake = 'x';
	
/* Loop Infinitely */ 
    while (1) 
    {
		if (TCNT1 > 10000)  // 15873
 158:	2c b5       	in	r18, 0x2c	; 44
 15a:	3d b5       	in	r19, 0x2d	; 45
 15c:	21 31       	cpi	r18, 0x11	; 17
 15e:	37 42       	sbci	r19, 0x27	; 39
 160:	58 f0       	brcs	.+22     	; 0x178 <main+0x7a>
		{
			TCNT1 = 0; 
 162:	1d bc       	out	0x2d, r1	; 45
 164:	1c bc       	out	0x2c, r1	; 44
			counter++;
 166:	0f 5f       	subi	r16, 0xFF	; 255
 168:	1f 4f       	sbci	r17, 0xFF	; 255
			if(counter > 1587){ //1000
 16a:	04 33       	cpi	r16, 0x34	; 52
 16c:	86 e0       	ldi	r24, 0x06	; 6
 16e:	18 07       	cpc	r17, r24
 170:	18 f0       	brcs	.+6      	; 0x178 <main+0x7a>
				counter = 0; 
				PORTB = (1<<PB0)|(1<<PB1); // need to keep port 0 high since pulled-up for push button
 172:	98 ba       	out	0x18, r9	; 24
		if (TCNT1 > 10000)  // 15873
		{
			TCNT1 = 0; 
			counter++;
			if(counter > 1587){ //1000
				counter = 0; 
 174:	07 2d       	mov	r16, r7
 176:	18 2d       	mov	r17, r8
			}		
		}
		
		else if (buttonAvl)	
		{
			if(debounce())
 178:	0e 94 5c 00 	call	0xb8	; 0xb8 <debounce>
 17c:	88 23       	and	r24, r24
 17e:	11 f1       	breq	.+68     	; 0x1c4 <main+0xc6>
			{
				if(buttonWasPressed == 0)
 180:	b1 10       	cpse	r11, r1
 182:	ea cf       	rjmp	.-44     	; 0x158 <main+0x5a>
				{
					buttonWasPressed = 1; 
					PORTB = (1<<PB0)|(1<<PB1); // need to keep port 0 high since pulled-up for push button 
 184:	98 ba       	out	0x18, r9	; 24
					pressCount = eeprom_read_byte((uint8_t*)46); // read from memory
 186:	8e e2       	ldi	r24, 0x2E	; 46
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	0e 94 88 03 	call	0x710	; 0x710 <eeprom_read_byte>
					pressCount++; // increment button count
 18e:	bb 24       	eor	r11, r11
 190:	b3 94       	inc	r11
 192:	b8 0e       	add	r11, r24
					eeprom_write_byte((uint8_t*)46, pressCount); // write to memory
 194:	6b 2d       	mov	r22, r11
 196:	8e e2       	ldi	r24, 0x2E	; 46
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	0e 94 90 03 	call	0x720	; 0x720 <eeprom_write_byte>
					sprintf(pressCountChar, "Button Pressed %d times...\r\n", pressCount);
 19e:	1f 92       	push	r1
 1a0:	bf 92       	push	r11
 1a2:	df 92       	push	r13
 1a4:	cf 92       	push	r12
 1a6:	ff 92       	push	r15
 1a8:	ef 92       	push	r14
 1aa:	0e 94 e7 00 	call	0x1ce	; 0x1ce <sprintf>
					USART_putstring(pressCountChar); 
 1ae:	c7 01       	movw	r24, r14
 1b0:	0e 94 4d 00 	call	0x9a	; 0x9a <USART_putstring>
 1b4:	0f 90       	pop	r0
 1b6:	0f 90       	pop	r0
 1b8:	0f 90       	pop	r0
 1ba:	0f 90       	pop	r0
 1bc:	0f 90       	pop	r0
 1be:	0f 90       	pop	r0
		{
			if(debounce())
			{
				if(buttonWasPressed == 0)
				{
					buttonWasPressed = 1; 
 1c0:	b6 2c       	mov	r11, r6
 1c2:	ca cf       	rjmp	.-108    	; 0x158 <main+0x5a>
				}
			}
			else
			{
				buttonWasPressed = 0; 
				PORTB &= (1<<PB0); // need to keep port 0 high since pulled-up for push button 
 1c4:	98 b3       	in	r25, 0x18	; 24
 1c6:	91 70       	andi	r25, 0x01	; 1
 1c8:	98 bb       	out	0x18, r25	; 24
					USART_putstring(pressCountChar); 
				}
			}
			else
			{
				buttonWasPressed = 0; 
 1ca:	ba 2c       	mov	r11, r10
 1cc:	c5 cf       	rjmp	.-118    	; 0x158 <main+0x5a>

000001ce <sprintf>:
 1ce:	ae e0       	ldi	r26, 0x0E	; 14
 1d0:	b0 e0       	ldi	r27, 0x00	; 0
 1d2:	ed ee       	ldi	r30, 0xED	; 237
 1d4:	f0 e0       	ldi	r31, 0x00	; 0
 1d6:	0c 94 ab 03 	jmp	0x756	; 0x756 <__prologue_saves__+0x1c>
 1da:	0d 89       	ldd	r16, Y+21	; 0x15
 1dc:	1e 89       	ldd	r17, Y+22	; 0x16
 1de:	86 e0       	ldi	r24, 0x06	; 6
 1e0:	8c 83       	std	Y+4, r24	; 0x04
 1e2:	1a 83       	std	Y+2, r17	; 0x02
 1e4:	09 83       	std	Y+1, r16	; 0x01
 1e6:	8f ef       	ldi	r24, 0xFF	; 255
 1e8:	9f e7       	ldi	r25, 0x7F	; 127
 1ea:	9e 83       	std	Y+6, r25	; 0x06
 1ec:	8d 83       	std	Y+5, r24	; 0x05
 1ee:	ae 01       	movw	r20, r28
 1f0:	47 5e       	subi	r20, 0xE7	; 231
 1f2:	5f 4f       	sbci	r21, 0xFF	; 255
 1f4:	6f 89       	ldd	r22, Y+23	; 0x17
 1f6:	78 8d       	ldd	r23, Y+24	; 0x18
 1f8:	ce 01       	movw	r24, r28
 1fa:	01 96       	adiw	r24, 0x01	; 1
 1fc:	0e 94 0a 01 	call	0x214	; 0x214 <vfprintf>
 200:	2f 81       	ldd	r18, Y+7	; 0x07
 202:	38 85       	ldd	r19, Y+8	; 0x08
 204:	f8 01       	movw	r30, r16
 206:	e2 0f       	add	r30, r18
 208:	f3 1f       	adc	r31, r19
 20a:	10 82       	st	Z, r1
 20c:	2e 96       	adiw	r28, 0x0e	; 14
 20e:	e4 e0       	ldi	r30, 0x04	; 4
 210:	0c 94 c7 03 	jmp	0x78e	; 0x78e <__epilogue_restores__+0x1c>

00000214 <vfprintf>:
 214:	ac e0       	ldi	r26, 0x0C	; 12
 216:	b0 e0       	ldi	r27, 0x00	; 0
 218:	e0 e1       	ldi	r30, 0x10	; 16
 21a:	f1 e0       	ldi	r31, 0x01	; 1
 21c:	0c 94 9d 03 	jmp	0x73a	; 0x73a <__prologue_saves__>
 220:	7c 01       	movw	r14, r24
 222:	6b 01       	movw	r12, r22
 224:	8a 01       	movw	r16, r20
 226:	fc 01       	movw	r30, r24
 228:	17 82       	std	Z+7, r1	; 0x07
 22a:	16 82       	std	Z+6, r1	; 0x06
 22c:	83 81       	ldd	r24, Z+3	; 0x03
 22e:	81 ff       	sbrs	r24, 1
 230:	bd c1       	rjmp	.+890    	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 232:	ce 01       	movw	r24, r28
 234:	01 96       	adiw	r24, 0x01	; 1
 236:	4c 01       	movw	r8, r24
 238:	f7 01       	movw	r30, r14
 23a:	93 81       	ldd	r25, Z+3	; 0x03
 23c:	f6 01       	movw	r30, r12
 23e:	93 fd       	sbrc	r25, 3
 240:	85 91       	lpm	r24, Z+
 242:	93 ff       	sbrs	r25, 3
 244:	81 91       	ld	r24, Z+
 246:	6f 01       	movw	r12, r30
 248:	88 23       	and	r24, r24
 24a:	09 f4       	brne	.+2      	; 0x24e <vfprintf+0x3a>
 24c:	ab c1       	rjmp	.+854    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 24e:	85 32       	cpi	r24, 0x25	; 37
 250:	39 f4       	brne	.+14     	; 0x260 <vfprintf+0x4c>
 252:	93 fd       	sbrc	r25, 3
 254:	85 91       	lpm	r24, Z+
 256:	93 ff       	sbrs	r25, 3
 258:	81 91       	ld	r24, Z+
 25a:	6f 01       	movw	r12, r30
 25c:	85 32       	cpi	r24, 0x25	; 37
 25e:	29 f4       	brne	.+10     	; 0x26a <vfprintf+0x56>
 260:	b7 01       	movw	r22, r14
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <fputc>
 268:	e7 cf       	rjmp	.-50     	; 0x238 <vfprintf+0x24>
 26a:	51 2c       	mov	r5, r1
 26c:	31 2c       	mov	r3, r1
 26e:	20 e0       	ldi	r18, 0x00	; 0
 270:	20 32       	cpi	r18, 0x20	; 32
 272:	a0 f4       	brcc	.+40     	; 0x29c <vfprintf+0x88>
 274:	8b 32       	cpi	r24, 0x2B	; 43
 276:	69 f0       	breq	.+26     	; 0x292 <vfprintf+0x7e>
 278:	30 f4       	brcc	.+12     	; 0x286 <vfprintf+0x72>
 27a:	80 32       	cpi	r24, 0x20	; 32
 27c:	59 f0       	breq	.+22     	; 0x294 <vfprintf+0x80>
 27e:	83 32       	cpi	r24, 0x23	; 35
 280:	69 f4       	brne	.+26     	; 0x29c <vfprintf+0x88>
 282:	20 61       	ori	r18, 0x10	; 16
 284:	2c c0       	rjmp	.+88     	; 0x2de <vfprintf+0xca>
 286:	8d 32       	cpi	r24, 0x2D	; 45
 288:	39 f0       	breq	.+14     	; 0x298 <vfprintf+0x84>
 28a:	80 33       	cpi	r24, 0x30	; 48
 28c:	39 f4       	brne	.+14     	; 0x29c <vfprintf+0x88>
 28e:	21 60       	ori	r18, 0x01	; 1
 290:	26 c0       	rjmp	.+76     	; 0x2de <vfprintf+0xca>
 292:	22 60       	ori	r18, 0x02	; 2
 294:	24 60       	ori	r18, 0x04	; 4
 296:	23 c0       	rjmp	.+70     	; 0x2de <vfprintf+0xca>
 298:	28 60       	ori	r18, 0x08	; 8
 29a:	21 c0       	rjmp	.+66     	; 0x2de <vfprintf+0xca>
 29c:	27 fd       	sbrc	r18, 7
 29e:	27 c0       	rjmp	.+78     	; 0x2ee <vfprintf+0xda>
 2a0:	30 ed       	ldi	r19, 0xD0	; 208
 2a2:	38 0f       	add	r19, r24
 2a4:	3a 30       	cpi	r19, 0x0A	; 10
 2a6:	78 f4       	brcc	.+30     	; 0x2c6 <vfprintf+0xb2>
 2a8:	26 ff       	sbrs	r18, 6
 2aa:	06 c0       	rjmp	.+12     	; 0x2b8 <vfprintf+0xa4>
 2ac:	fa e0       	ldi	r31, 0x0A	; 10
 2ae:	5f 9e       	mul	r5, r31
 2b0:	30 0d       	add	r19, r0
 2b2:	11 24       	eor	r1, r1
 2b4:	53 2e       	mov	r5, r19
 2b6:	13 c0       	rjmp	.+38     	; 0x2de <vfprintf+0xca>
 2b8:	8a e0       	ldi	r24, 0x0A	; 10
 2ba:	38 9e       	mul	r3, r24
 2bc:	30 0d       	add	r19, r0
 2be:	11 24       	eor	r1, r1
 2c0:	33 2e       	mov	r3, r19
 2c2:	20 62       	ori	r18, 0x20	; 32
 2c4:	0c c0       	rjmp	.+24     	; 0x2de <vfprintf+0xca>
 2c6:	8e 32       	cpi	r24, 0x2E	; 46
 2c8:	21 f4       	brne	.+8      	; 0x2d2 <vfprintf+0xbe>
 2ca:	26 fd       	sbrc	r18, 6
 2cc:	6b c1       	rjmp	.+726    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 2ce:	20 64       	ori	r18, 0x40	; 64
 2d0:	06 c0       	rjmp	.+12     	; 0x2de <vfprintf+0xca>
 2d2:	8c 36       	cpi	r24, 0x6C	; 108
 2d4:	11 f4       	brne	.+4      	; 0x2da <vfprintf+0xc6>
 2d6:	20 68       	ori	r18, 0x80	; 128
 2d8:	02 c0       	rjmp	.+4      	; 0x2de <vfprintf+0xca>
 2da:	88 36       	cpi	r24, 0x68	; 104
 2dc:	41 f4       	brne	.+16     	; 0x2ee <vfprintf+0xda>
 2de:	f6 01       	movw	r30, r12
 2e0:	93 fd       	sbrc	r25, 3
 2e2:	85 91       	lpm	r24, Z+
 2e4:	93 ff       	sbrs	r25, 3
 2e6:	81 91       	ld	r24, Z+
 2e8:	6f 01       	movw	r12, r30
 2ea:	81 11       	cpse	r24, r1
 2ec:	c1 cf       	rjmp	.-126    	; 0x270 <vfprintf+0x5c>
 2ee:	98 2f       	mov	r25, r24
 2f0:	9f 7d       	andi	r25, 0xDF	; 223
 2f2:	95 54       	subi	r25, 0x45	; 69
 2f4:	93 30       	cpi	r25, 0x03	; 3
 2f6:	28 f4       	brcc	.+10     	; 0x302 <vfprintf+0xee>
 2f8:	0c 5f       	subi	r16, 0xFC	; 252
 2fa:	1f 4f       	sbci	r17, 0xFF	; 255
 2fc:	ff e3       	ldi	r31, 0x3F	; 63
 2fe:	f9 83       	std	Y+1, r31	; 0x01
 300:	0d c0       	rjmp	.+26     	; 0x31c <vfprintf+0x108>
 302:	83 36       	cpi	r24, 0x63	; 99
 304:	31 f0       	breq	.+12     	; 0x312 <vfprintf+0xfe>
 306:	83 37       	cpi	r24, 0x73	; 115
 308:	71 f0       	breq	.+28     	; 0x326 <vfprintf+0x112>
 30a:	83 35       	cpi	r24, 0x53	; 83
 30c:	09 f0       	breq	.+2      	; 0x310 <vfprintf+0xfc>
 30e:	5b c0       	rjmp	.+182    	; 0x3c6 <vfprintf+0x1b2>
 310:	22 c0       	rjmp	.+68     	; 0x356 <vfprintf+0x142>
 312:	f8 01       	movw	r30, r16
 314:	80 81       	ld	r24, Z
 316:	89 83       	std	Y+1, r24	; 0x01
 318:	0e 5f       	subi	r16, 0xFE	; 254
 31a:	1f 4f       	sbci	r17, 0xFF	; 255
 31c:	44 24       	eor	r4, r4
 31e:	43 94       	inc	r4
 320:	51 2c       	mov	r5, r1
 322:	54 01       	movw	r10, r8
 324:	15 c0       	rjmp	.+42     	; 0x350 <vfprintf+0x13c>
 326:	38 01       	movw	r6, r16
 328:	f2 e0       	ldi	r31, 0x02	; 2
 32a:	6f 0e       	add	r6, r31
 32c:	71 1c       	adc	r7, r1
 32e:	f8 01       	movw	r30, r16
 330:	a0 80       	ld	r10, Z
 332:	b1 80       	ldd	r11, Z+1	; 0x01
 334:	26 ff       	sbrs	r18, 6
 336:	03 c0       	rjmp	.+6      	; 0x33e <vfprintf+0x12a>
 338:	65 2d       	mov	r22, r5
 33a:	70 e0       	ldi	r23, 0x00	; 0
 33c:	02 c0       	rjmp	.+4      	; 0x342 <vfprintf+0x12e>
 33e:	6f ef       	ldi	r22, 0xFF	; 255
 340:	7f ef       	ldi	r23, 0xFF	; 255
 342:	c5 01       	movw	r24, r10
 344:	2c 87       	std	Y+12, r18	; 0x0c
 346:	0e 94 e7 02 	call	0x5ce	; 0x5ce <strnlen>
 34a:	2c 01       	movw	r4, r24
 34c:	83 01       	movw	r16, r6
 34e:	2c 85       	ldd	r18, Y+12	; 0x0c
 350:	2f 77       	andi	r18, 0x7F	; 127
 352:	22 2e       	mov	r2, r18
 354:	17 c0       	rjmp	.+46     	; 0x384 <vfprintf+0x170>
 356:	38 01       	movw	r6, r16
 358:	f2 e0       	ldi	r31, 0x02	; 2
 35a:	6f 0e       	add	r6, r31
 35c:	71 1c       	adc	r7, r1
 35e:	f8 01       	movw	r30, r16
 360:	a0 80       	ld	r10, Z
 362:	b1 80       	ldd	r11, Z+1	; 0x01
 364:	26 ff       	sbrs	r18, 6
 366:	03 c0       	rjmp	.+6      	; 0x36e <vfprintf+0x15a>
 368:	65 2d       	mov	r22, r5
 36a:	70 e0       	ldi	r23, 0x00	; 0
 36c:	02 c0       	rjmp	.+4      	; 0x372 <vfprintf+0x15e>
 36e:	6f ef       	ldi	r22, 0xFF	; 255
 370:	7f ef       	ldi	r23, 0xFF	; 255
 372:	c5 01       	movw	r24, r10
 374:	2c 87       	std	Y+12, r18	; 0x0c
 376:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <strnlen_P>
 37a:	2c 01       	movw	r4, r24
 37c:	2c 85       	ldd	r18, Y+12	; 0x0c
 37e:	20 68       	ori	r18, 0x80	; 128
 380:	22 2e       	mov	r2, r18
 382:	83 01       	movw	r16, r6
 384:	23 fc       	sbrc	r2, 3
 386:	1b c0       	rjmp	.+54     	; 0x3be <vfprintf+0x1aa>
 388:	83 2d       	mov	r24, r3
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	48 16       	cp	r4, r24
 38e:	59 06       	cpc	r5, r25
 390:	b0 f4       	brcc	.+44     	; 0x3be <vfprintf+0x1aa>
 392:	b7 01       	movw	r22, r14
 394:	80 e2       	ldi	r24, 0x20	; 32
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <fputc>
 39c:	3a 94       	dec	r3
 39e:	f4 cf       	rjmp	.-24     	; 0x388 <vfprintf+0x174>
 3a0:	f5 01       	movw	r30, r10
 3a2:	27 fc       	sbrc	r2, 7
 3a4:	85 91       	lpm	r24, Z+
 3a6:	27 fe       	sbrs	r2, 7
 3a8:	81 91       	ld	r24, Z+
 3aa:	5f 01       	movw	r10, r30
 3ac:	b7 01       	movw	r22, r14
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <fputc>
 3b4:	31 10       	cpse	r3, r1
 3b6:	3a 94       	dec	r3
 3b8:	f1 e0       	ldi	r31, 0x01	; 1
 3ba:	4f 1a       	sub	r4, r31
 3bc:	51 08       	sbc	r5, r1
 3be:	41 14       	cp	r4, r1
 3c0:	51 04       	cpc	r5, r1
 3c2:	71 f7       	brne	.-36     	; 0x3a0 <vfprintf+0x18c>
 3c4:	e5 c0       	rjmp	.+458    	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 3c6:	84 36       	cpi	r24, 0x64	; 100
 3c8:	11 f0       	breq	.+4      	; 0x3ce <vfprintf+0x1ba>
 3ca:	89 36       	cpi	r24, 0x69	; 105
 3cc:	39 f5       	brne	.+78     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3ce:	f8 01       	movw	r30, r16
 3d0:	27 ff       	sbrs	r18, 7
 3d2:	07 c0       	rjmp	.+14     	; 0x3e2 <vfprintf+0x1ce>
 3d4:	60 81       	ld	r22, Z
 3d6:	71 81       	ldd	r23, Z+1	; 0x01
 3d8:	82 81       	ldd	r24, Z+2	; 0x02
 3da:	93 81       	ldd	r25, Z+3	; 0x03
 3dc:	0c 5f       	subi	r16, 0xFC	; 252
 3de:	1f 4f       	sbci	r17, 0xFF	; 255
 3e0:	08 c0       	rjmp	.+16     	; 0x3f2 <vfprintf+0x1de>
 3e2:	60 81       	ld	r22, Z
 3e4:	71 81       	ldd	r23, Z+1	; 0x01
 3e6:	07 2e       	mov	r0, r23
 3e8:	00 0c       	add	r0, r0
 3ea:	88 0b       	sbc	r24, r24
 3ec:	99 0b       	sbc	r25, r25
 3ee:	0e 5f       	subi	r16, 0xFE	; 254
 3f0:	1f 4f       	sbci	r17, 0xFF	; 255
 3f2:	2f 76       	andi	r18, 0x6F	; 111
 3f4:	72 2e       	mov	r7, r18
 3f6:	97 ff       	sbrs	r25, 7
 3f8:	09 c0       	rjmp	.+18     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3fa:	90 95       	com	r25
 3fc:	80 95       	com	r24
 3fe:	70 95       	com	r23
 400:	61 95       	neg	r22
 402:	7f 4f       	sbci	r23, 0xFF	; 255
 404:	8f 4f       	sbci	r24, 0xFF	; 255
 406:	9f 4f       	sbci	r25, 0xFF	; 255
 408:	20 68       	ori	r18, 0x80	; 128
 40a:	72 2e       	mov	r7, r18
 40c:	2a e0       	ldi	r18, 0x0A	; 10
 40e:	30 e0       	ldi	r19, 0x00	; 0
 410:	a4 01       	movw	r20, r8
 412:	0e 94 2a 03 	call	0x654	; 0x654 <__ultoa_invert>
 416:	a8 2e       	mov	r10, r24
 418:	a8 18       	sub	r10, r8
 41a:	44 c0       	rjmp	.+136    	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 41c:	85 37       	cpi	r24, 0x75	; 117
 41e:	29 f4       	brne	.+10     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 420:	2f 7e       	andi	r18, 0xEF	; 239
 422:	b2 2e       	mov	r11, r18
 424:	2a e0       	ldi	r18, 0x0A	; 10
 426:	30 e0       	ldi	r19, 0x00	; 0
 428:	25 c0       	rjmp	.+74     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 42a:	f2 2f       	mov	r31, r18
 42c:	f9 7f       	andi	r31, 0xF9	; 249
 42e:	bf 2e       	mov	r11, r31
 430:	8f 36       	cpi	r24, 0x6F	; 111
 432:	c1 f0       	breq	.+48     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 434:	18 f4       	brcc	.+6      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 436:	88 35       	cpi	r24, 0x58	; 88
 438:	79 f0       	breq	.+30     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 43a:	b4 c0       	rjmp	.+360    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 43c:	80 37       	cpi	r24, 0x70	; 112
 43e:	19 f0       	breq	.+6      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 440:	88 37       	cpi	r24, 0x78	; 120
 442:	21 f0       	breq	.+8      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 444:	af c0       	rjmp	.+350    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 446:	2f 2f       	mov	r18, r31
 448:	20 61       	ori	r18, 0x10	; 16
 44a:	b2 2e       	mov	r11, r18
 44c:	b4 fe       	sbrs	r11, 4
 44e:	0d c0       	rjmp	.+26     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 450:	8b 2d       	mov	r24, r11
 452:	84 60       	ori	r24, 0x04	; 4
 454:	b8 2e       	mov	r11, r24
 456:	09 c0       	rjmp	.+18     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 458:	24 ff       	sbrs	r18, 4
 45a:	0a c0       	rjmp	.+20     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 45c:	9f 2f       	mov	r25, r31
 45e:	96 60       	ori	r25, 0x06	; 6
 460:	b9 2e       	mov	r11, r25
 462:	06 c0       	rjmp	.+12     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 464:	28 e0       	ldi	r18, 0x08	; 8
 466:	30 e0       	ldi	r19, 0x00	; 0
 468:	05 c0       	rjmp	.+10     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 46a:	20 e1       	ldi	r18, 0x10	; 16
 46c:	30 e0       	ldi	r19, 0x00	; 0
 46e:	02 c0       	rjmp	.+4      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 470:	20 e1       	ldi	r18, 0x10	; 16
 472:	32 e0       	ldi	r19, 0x02	; 2
 474:	f8 01       	movw	r30, r16
 476:	b7 fe       	sbrs	r11, 7
 478:	07 c0       	rjmp	.+14     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 47a:	60 81       	ld	r22, Z
 47c:	71 81       	ldd	r23, Z+1	; 0x01
 47e:	82 81       	ldd	r24, Z+2	; 0x02
 480:	93 81       	ldd	r25, Z+3	; 0x03
 482:	0c 5f       	subi	r16, 0xFC	; 252
 484:	1f 4f       	sbci	r17, 0xFF	; 255
 486:	06 c0       	rjmp	.+12     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 488:	60 81       	ld	r22, Z
 48a:	71 81       	ldd	r23, Z+1	; 0x01
 48c:	80 e0       	ldi	r24, 0x00	; 0
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	0e 5f       	subi	r16, 0xFE	; 254
 492:	1f 4f       	sbci	r17, 0xFF	; 255
 494:	a4 01       	movw	r20, r8
 496:	0e 94 2a 03 	call	0x654	; 0x654 <__ultoa_invert>
 49a:	a8 2e       	mov	r10, r24
 49c:	a8 18       	sub	r10, r8
 49e:	fb 2d       	mov	r31, r11
 4a0:	ff 77       	andi	r31, 0x7F	; 127
 4a2:	7f 2e       	mov	r7, r31
 4a4:	76 fe       	sbrs	r7, 6
 4a6:	0b c0       	rjmp	.+22     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4a8:	37 2d       	mov	r19, r7
 4aa:	3e 7f       	andi	r19, 0xFE	; 254
 4ac:	a5 14       	cp	r10, r5
 4ae:	50 f4       	brcc	.+20     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4b0:	74 fe       	sbrs	r7, 4
 4b2:	0a c0       	rjmp	.+20     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4b4:	72 fc       	sbrc	r7, 2
 4b6:	08 c0       	rjmp	.+16     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4b8:	37 2d       	mov	r19, r7
 4ba:	3e 7e       	andi	r19, 0xEE	; 238
 4bc:	05 c0       	rjmp	.+10     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4be:	ba 2c       	mov	r11, r10
 4c0:	37 2d       	mov	r19, r7
 4c2:	03 c0       	rjmp	.+6      	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4c4:	ba 2c       	mov	r11, r10
 4c6:	01 c0       	rjmp	.+2      	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4c8:	b5 2c       	mov	r11, r5
 4ca:	34 ff       	sbrs	r19, 4
 4cc:	0d c0       	rjmp	.+26     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4ce:	fe 01       	movw	r30, r28
 4d0:	ea 0d       	add	r30, r10
 4d2:	f1 1d       	adc	r31, r1
 4d4:	80 81       	ld	r24, Z
 4d6:	80 33       	cpi	r24, 0x30	; 48
 4d8:	11 f4       	brne	.+4      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4da:	39 7e       	andi	r19, 0xE9	; 233
 4dc:	09 c0       	rjmp	.+18     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4de:	32 ff       	sbrs	r19, 2
 4e0:	06 c0       	rjmp	.+12     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4e2:	b3 94       	inc	r11
 4e4:	b3 94       	inc	r11
 4e6:	04 c0       	rjmp	.+8      	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4e8:	83 2f       	mov	r24, r19
 4ea:	86 78       	andi	r24, 0x86	; 134
 4ec:	09 f0       	breq	.+2      	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4ee:	b3 94       	inc	r11
 4f0:	33 fd       	sbrc	r19, 3
 4f2:	13 c0       	rjmp	.+38     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 4f4:	30 ff       	sbrs	r19, 0
 4f6:	06 c0       	rjmp	.+12     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4f8:	5a 2c       	mov	r5, r10
 4fa:	b3 14       	cp	r11, r3
 4fc:	18 f4       	brcc	.+6      	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4fe:	53 0c       	add	r5, r3
 500:	5b 18       	sub	r5, r11
 502:	b3 2c       	mov	r11, r3
 504:	b3 14       	cp	r11, r3
 506:	68 f4       	brcc	.+26     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 508:	b7 01       	movw	r22, r14
 50a:	80 e2       	ldi	r24, 0x20	; 32
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	3c 87       	std	Y+12, r19	; 0x0c
 510:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <fputc>
 514:	b3 94       	inc	r11
 516:	3c 85       	ldd	r19, Y+12	; 0x0c
 518:	f5 cf       	rjmp	.-22     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 51a:	b3 14       	cp	r11, r3
 51c:	10 f4       	brcc	.+4      	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 51e:	3b 18       	sub	r3, r11
 520:	01 c0       	rjmp	.+2      	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 522:	31 2c       	mov	r3, r1
 524:	34 ff       	sbrs	r19, 4
 526:	12 c0       	rjmp	.+36     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 528:	b7 01       	movw	r22, r14
 52a:	80 e3       	ldi	r24, 0x30	; 48
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	3c 87       	std	Y+12, r19	; 0x0c
 530:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <fputc>
 534:	3c 85       	ldd	r19, Y+12	; 0x0c
 536:	32 ff       	sbrs	r19, 2
 538:	17 c0       	rjmp	.+46     	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 53a:	31 fd       	sbrc	r19, 1
 53c:	03 c0       	rjmp	.+6      	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 53e:	88 e7       	ldi	r24, 0x78	; 120
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	02 c0       	rjmp	.+4      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 544:	88 e5       	ldi	r24, 0x58	; 88
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	b7 01       	movw	r22, r14
 54a:	0c c0       	rjmp	.+24     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 54c:	83 2f       	mov	r24, r19
 54e:	86 78       	andi	r24, 0x86	; 134
 550:	59 f0       	breq	.+22     	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 552:	31 ff       	sbrs	r19, 1
 554:	02 c0       	rjmp	.+4      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 556:	8b e2       	ldi	r24, 0x2B	; 43
 558:	01 c0       	rjmp	.+2      	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 55a:	80 e2       	ldi	r24, 0x20	; 32
 55c:	37 fd       	sbrc	r19, 7
 55e:	8d e2       	ldi	r24, 0x2D	; 45
 560:	b7 01       	movw	r22, r14
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <fputc>
 568:	a5 14       	cp	r10, r5
 56a:	38 f4       	brcc	.+14     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 56c:	b7 01       	movw	r22, r14
 56e:	80 e3       	ldi	r24, 0x30	; 48
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <fputc>
 576:	5a 94       	dec	r5
 578:	f7 cf       	rjmp	.-18     	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 57a:	aa 94       	dec	r10
 57c:	f4 01       	movw	r30, r8
 57e:	ea 0d       	add	r30, r10
 580:	f1 1d       	adc	r31, r1
 582:	80 81       	ld	r24, Z
 584:	b7 01       	movw	r22, r14
 586:	90 e0       	ldi	r25, 0x00	; 0
 588:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <fputc>
 58c:	a1 10       	cpse	r10, r1
 58e:	f5 cf       	rjmp	.-22     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 590:	33 20       	and	r3, r3
 592:	09 f4       	brne	.+2      	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 594:	51 ce       	rjmp	.-862    	; 0x238 <vfprintf+0x24>
 596:	b7 01       	movw	r22, r14
 598:	80 e2       	ldi	r24, 0x20	; 32
 59a:	90 e0       	ldi	r25, 0x00	; 0
 59c:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <fputc>
 5a0:	3a 94       	dec	r3
 5a2:	f6 cf       	rjmp	.-20     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 5a4:	f7 01       	movw	r30, r14
 5a6:	86 81       	ldd	r24, Z+6	; 0x06
 5a8:	97 81       	ldd	r25, Z+7	; 0x07
 5aa:	02 c0       	rjmp	.+4      	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5ac:	8f ef       	ldi	r24, 0xFF	; 255
 5ae:	9f ef       	ldi	r25, 0xFF	; 255
 5b0:	2c 96       	adiw	r28, 0x0c	; 12
 5b2:	e2 e1       	ldi	r30, 0x12	; 18
 5b4:	0c 94 b9 03 	jmp	0x772	; 0x772 <__epilogue_restores__>

000005b8 <strnlen_P>:
 5b8:	fc 01       	movw	r30, r24
 5ba:	05 90       	lpm	r0, Z+
 5bc:	61 50       	subi	r22, 0x01	; 1
 5be:	70 40       	sbci	r23, 0x00	; 0
 5c0:	01 10       	cpse	r0, r1
 5c2:	d8 f7       	brcc	.-10     	; 0x5ba <strnlen_P+0x2>
 5c4:	80 95       	com	r24
 5c6:	90 95       	com	r25
 5c8:	8e 0f       	add	r24, r30
 5ca:	9f 1f       	adc	r25, r31
 5cc:	08 95       	ret

000005ce <strnlen>:
 5ce:	fc 01       	movw	r30, r24
 5d0:	61 50       	subi	r22, 0x01	; 1
 5d2:	70 40       	sbci	r23, 0x00	; 0
 5d4:	01 90       	ld	r0, Z+
 5d6:	01 10       	cpse	r0, r1
 5d8:	d8 f7       	brcc	.-10     	; 0x5d0 <strnlen+0x2>
 5da:	80 95       	com	r24
 5dc:	90 95       	com	r25
 5de:	8e 0f       	add	r24, r30
 5e0:	9f 1f       	adc	r25, r31
 5e2:	08 95       	ret

000005e4 <fputc>:
 5e4:	0f 93       	push	r16
 5e6:	1f 93       	push	r17
 5e8:	cf 93       	push	r28
 5ea:	df 93       	push	r29
 5ec:	fb 01       	movw	r30, r22
 5ee:	23 81       	ldd	r18, Z+3	; 0x03
 5f0:	21 fd       	sbrc	r18, 1
 5f2:	03 c0       	rjmp	.+6      	; 0x5fa <fputc+0x16>
 5f4:	8f ef       	ldi	r24, 0xFF	; 255
 5f6:	9f ef       	ldi	r25, 0xFF	; 255
 5f8:	28 c0       	rjmp	.+80     	; 0x64a <fputc+0x66>
 5fa:	22 ff       	sbrs	r18, 2
 5fc:	16 c0       	rjmp	.+44     	; 0x62a <fputc+0x46>
 5fe:	46 81       	ldd	r20, Z+6	; 0x06
 600:	57 81       	ldd	r21, Z+7	; 0x07
 602:	24 81       	ldd	r18, Z+4	; 0x04
 604:	35 81       	ldd	r19, Z+5	; 0x05
 606:	42 17       	cp	r20, r18
 608:	53 07       	cpc	r21, r19
 60a:	44 f4       	brge	.+16     	; 0x61c <fputc+0x38>
 60c:	a0 81       	ld	r26, Z
 60e:	b1 81       	ldd	r27, Z+1	; 0x01
 610:	9d 01       	movw	r18, r26
 612:	2f 5f       	subi	r18, 0xFF	; 255
 614:	3f 4f       	sbci	r19, 0xFF	; 255
 616:	31 83       	std	Z+1, r19	; 0x01
 618:	20 83       	st	Z, r18
 61a:	8c 93       	st	X, r24
 61c:	26 81       	ldd	r18, Z+6	; 0x06
 61e:	37 81       	ldd	r19, Z+7	; 0x07
 620:	2f 5f       	subi	r18, 0xFF	; 255
 622:	3f 4f       	sbci	r19, 0xFF	; 255
 624:	37 83       	std	Z+7, r19	; 0x07
 626:	26 83       	std	Z+6, r18	; 0x06
 628:	10 c0       	rjmp	.+32     	; 0x64a <fputc+0x66>
 62a:	eb 01       	movw	r28, r22
 62c:	09 2f       	mov	r16, r25
 62e:	18 2f       	mov	r17, r24
 630:	00 84       	ldd	r0, Z+8	; 0x08
 632:	f1 85       	ldd	r31, Z+9	; 0x09
 634:	e0 2d       	mov	r30, r0
 636:	09 95       	icall
 638:	89 2b       	or	r24, r25
 63a:	e1 f6       	brne	.-72     	; 0x5f4 <fputc+0x10>
 63c:	8e 81       	ldd	r24, Y+6	; 0x06
 63e:	9f 81       	ldd	r25, Y+7	; 0x07
 640:	01 96       	adiw	r24, 0x01	; 1
 642:	9f 83       	std	Y+7, r25	; 0x07
 644:	8e 83       	std	Y+6, r24	; 0x06
 646:	81 2f       	mov	r24, r17
 648:	90 2f       	mov	r25, r16
 64a:	df 91       	pop	r29
 64c:	cf 91       	pop	r28
 64e:	1f 91       	pop	r17
 650:	0f 91       	pop	r16
 652:	08 95       	ret

00000654 <__ultoa_invert>:
 654:	fa 01       	movw	r30, r20
 656:	aa 27       	eor	r26, r26
 658:	28 30       	cpi	r18, 0x08	; 8
 65a:	51 f1       	breq	.+84     	; 0x6b0 <__ultoa_invert+0x5c>
 65c:	20 31       	cpi	r18, 0x10	; 16
 65e:	81 f1       	breq	.+96     	; 0x6c0 <__ultoa_invert+0x6c>
 660:	e8 94       	clt
 662:	6f 93       	push	r22
 664:	6e 7f       	andi	r22, 0xFE	; 254
 666:	6e 5f       	subi	r22, 0xFE	; 254
 668:	7f 4f       	sbci	r23, 0xFF	; 255
 66a:	8f 4f       	sbci	r24, 0xFF	; 255
 66c:	9f 4f       	sbci	r25, 0xFF	; 255
 66e:	af 4f       	sbci	r26, 0xFF	; 255
 670:	b1 e0       	ldi	r27, 0x01	; 1
 672:	3e d0       	rcall	.+124    	; 0x6f0 <__ultoa_invert+0x9c>
 674:	b4 e0       	ldi	r27, 0x04	; 4
 676:	3c d0       	rcall	.+120    	; 0x6f0 <__ultoa_invert+0x9c>
 678:	67 0f       	add	r22, r23
 67a:	78 1f       	adc	r23, r24
 67c:	89 1f       	adc	r24, r25
 67e:	9a 1f       	adc	r25, r26
 680:	a1 1d       	adc	r26, r1
 682:	68 0f       	add	r22, r24
 684:	79 1f       	adc	r23, r25
 686:	8a 1f       	adc	r24, r26
 688:	91 1d       	adc	r25, r1
 68a:	a1 1d       	adc	r26, r1
 68c:	6a 0f       	add	r22, r26
 68e:	71 1d       	adc	r23, r1
 690:	81 1d       	adc	r24, r1
 692:	91 1d       	adc	r25, r1
 694:	a1 1d       	adc	r26, r1
 696:	20 d0       	rcall	.+64     	; 0x6d8 <__ultoa_invert+0x84>
 698:	09 f4       	brne	.+2      	; 0x69c <__ultoa_invert+0x48>
 69a:	68 94       	set
 69c:	3f 91       	pop	r19
 69e:	2a e0       	ldi	r18, 0x0A	; 10
 6a0:	26 9f       	mul	r18, r22
 6a2:	11 24       	eor	r1, r1
 6a4:	30 19       	sub	r19, r0
 6a6:	30 5d       	subi	r19, 0xD0	; 208
 6a8:	31 93       	st	Z+, r19
 6aa:	de f6       	brtc	.-74     	; 0x662 <__ultoa_invert+0xe>
 6ac:	cf 01       	movw	r24, r30
 6ae:	08 95       	ret
 6b0:	46 2f       	mov	r20, r22
 6b2:	47 70       	andi	r20, 0x07	; 7
 6b4:	40 5d       	subi	r20, 0xD0	; 208
 6b6:	41 93       	st	Z+, r20
 6b8:	b3 e0       	ldi	r27, 0x03	; 3
 6ba:	0f d0       	rcall	.+30     	; 0x6da <__ultoa_invert+0x86>
 6bc:	c9 f7       	brne	.-14     	; 0x6b0 <__ultoa_invert+0x5c>
 6be:	f6 cf       	rjmp	.-20     	; 0x6ac <__ultoa_invert+0x58>
 6c0:	46 2f       	mov	r20, r22
 6c2:	4f 70       	andi	r20, 0x0F	; 15
 6c4:	40 5d       	subi	r20, 0xD0	; 208
 6c6:	4a 33       	cpi	r20, 0x3A	; 58
 6c8:	18 f0       	brcs	.+6      	; 0x6d0 <__ultoa_invert+0x7c>
 6ca:	49 5d       	subi	r20, 0xD9	; 217
 6cc:	31 fd       	sbrc	r19, 1
 6ce:	40 52       	subi	r20, 0x20	; 32
 6d0:	41 93       	st	Z+, r20
 6d2:	02 d0       	rcall	.+4      	; 0x6d8 <__ultoa_invert+0x84>
 6d4:	a9 f7       	brne	.-22     	; 0x6c0 <__ultoa_invert+0x6c>
 6d6:	ea cf       	rjmp	.-44     	; 0x6ac <__ultoa_invert+0x58>
 6d8:	b4 e0       	ldi	r27, 0x04	; 4
 6da:	a6 95       	lsr	r26
 6dc:	97 95       	ror	r25
 6de:	87 95       	ror	r24
 6e0:	77 95       	ror	r23
 6e2:	67 95       	ror	r22
 6e4:	ba 95       	dec	r27
 6e6:	c9 f7       	brne	.-14     	; 0x6da <__ultoa_invert+0x86>
 6e8:	00 97       	sbiw	r24, 0x00	; 0
 6ea:	61 05       	cpc	r22, r1
 6ec:	71 05       	cpc	r23, r1
 6ee:	08 95       	ret
 6f0:	9b 01       	movw	r18, r22
 6f2:	ac 01       	movw	r20, r24
 6f4:	0a 2e       	mov	r0, r26
 6f6:	06 94       	lsr	r0
 6f8:	57 95       	ror	r21
 6fa:	47 95       	ror	r20
 6fc:	37 95       	ror	r19
 6fe:	27 95       	ror	r18
 700:	ba 95       	dec	r27
 702:	c9 f7       	brne	.-14     	; 0x6f6 <__ultoa_invert+0xa2>
 704:	62 0f       	add	r22, r18
 706:	73 1f       	adc	r23, r19
 708:	84 1f       	adc	r24, r20
 70a:	95 1f       	adc	r25, r21
 70c:	a0 1d       	adc	r26, r0
 70e:	08 95       	ret

00000710 <eeprom_read_byte>:
 710:	e1 99       	sbic	0x1c, 1	; 28
 712:	fe cf       	rjmp	.-4      	; 0x710 <eeprom_read_byte>
 714:	9f bb       	out	0x1f, r25	; 31
 716:	8e bb       	out	0x1e, r24	; 30
 718:	e0 9a       	sbi	0x1c, 0	; 28
 71a:	99 27       	eor	r25, r25
 71c:	8d b3       	in	r24, 0x1d	; 29
 71e:	08 95       	ret

00000720 <eeprom_write_byte>:
 720:	26 2f       	mov	r18, r22

00000722 <eeprom_write_r18>:
 722:	e1 99       	sbic	0x1c, 1	; 28
 724:	fe cf       	rjmp	.-4      	; 0x722 <eeprom_write_r18>
 726:	9f bb       	out	0x1f, r25	; 31
 728:	8e bb       	out	0x1e, r24	; 30
 72a:	2d bb       	out	0x1d, r18	; 29
 72c:	0f b6       	in	r0, 0x3f	; 63
 72e:	f8 94       	cli
 730:	e2 9a       	sbi	0x1c, 2	; 28
 732:	e1 9a       	sbi	0x1c, 1	; 28
 734:	0f be       	out	0x3f, r0	; 63
 736:	01 96       	adiw	r24, 0x01	; 1
 738:	08 95       	ret

0000073a <__prologue_saves__>:
 73a:	2f 92       	push	r2
 73c:	3f 92       	push	r3
 73e:	4f 92       	push	r4
 740:	5f 92       	push	r5
 742:	6f 92       	push	r6
 744:	7f 92       	push	r7
 746:	8f 92       	push	r8
 748:	9f 92       	push	r9
 74a:	af 92       	push	r10
 74c:	bf 92       	push	r11
 74e:	cf 92       	push	r12
 750:	df 92       	push	r13
 752:	ef 92       	push	r14
 754:	ff 92       	push	r15
 756:	0f 93       	push	r16
 758:	1f 93       	push	r17
 75a:	cf 93       	push	r28
 75c:	df 93       	push	r29
 75e:	cd b7       	in	r28, 0x3d	; 61
 760:	de b7       	in	r29, 0x3e	; 62
 762:	ca 1b       	sub	r28, r26
 764:	db 0b       	sbc	r29, r27
 766:	0f b6       	in	r0, 0x3f	; 63
 768:	f8 94       	cli
 76a:	de bf       	out	0x3e, r29	; 62
 76c:	0f be       	out	0x3f, r0	; 63
 76e:	cd bf       	out	0x3d, r28	; 61
 770:	09 94       	ijmp

00000772 <__epilogue_restores__>:
 772:	2a 88       	ldd	r2, Y+18	; 0x12
 774:	39 88       	ldd	r3, Y+17	; 0x11
 776:	48 88       	ldd	r4, Y+16	; 0x10
 778:	5f 84       	ldd	r5, Y+15	; 0x0f
 77a:	6e 84       	ldd	r6, Y+14	; 0x0e
 77c:	7d 84       	ldd	r7, Y+13	; 0x0d
 77e:	8c 84       	ldd	r8, Y+12	; 0x0c
 780:	9b 84       	ldd	r9, Y+11	; 0x0b
 782:	aa 84       	ldd	r10, Y+10	; 0x0a
 784:	b9 84       	ldd	r11, Y+9	; 0x09
 786:	c8 84       	ldd	r12, Y+8	; 0x08
 788:	df 80       	ldd	r13, Y+7	; 0x07
 78a:	ee 80       	ldd	r14, Y+6	; 0x06
 78c:	fd 80       	ldd	r15, Y+5	; 0x05
 78e:	0c 81       	ldd	r16, Y+4	; 0x04
 790:	1b 81       	ldd	r17, Y+3	; 0x03
 792:	aa 81       	ldd	r26, Y+2	; 0x02
 794:	b9 81       	ldd	r27, Y+1	; 0x01
 796:	ce 0f       	add	r28, r30
 798:	d1 1d       	adc	r29, r1
 79a:	0f b6       	in	r0, 0x3f	; 63
 79c:	f8 94       	cli
 79e:	de bf       	out	0x3e, r29	; 62
 7a0:	0f be       	out	0x3f, r0	; 63
 7a2:	cd bf       	out	0x3d, r28	; 61
 7a4:	ed 01       	movw	r28, r26
 7a6:	08 95       	ret

000007a8 <_exit>:
 7a8:	f8 94       	cli

000007aa <__stop_program>:
 7aa:	ff cf       	rjmp	.-2      	; 0x7aa <__stop_program>
